version: 0.2

env:
  variables:
    LAYER_DIR: "lambdas/layer"
    LAYER_ZIP: "build/scraper_layer.zip"

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "Installing system dependencies..."
      - pip install pytest
      - echo "Installing Terraform..."
      - wget https://releases.hashicorp.com/terraform/1.13.2/terraform_1.13.2_linux_amd64.zip
      - unzip terraform_1.13.2_linux_amd64.zip -d /usr/local/bin/
      - terraform -version

  pre_build:
    commands:
      - echo "Preparing deterministic Lambda layer..."
      - mkdir -p $LAYER_DIR/python
      # Hash requirements.txt to check for changes
      - REQ_HASH=$(sha256sum lambdas/requirements.txt | awk '{print $1}')
      - if [ ! -f "$LAYER_DIR/.requirements_hash" ] || [ "$(cat $LAYER_DIR/.requirements_hash)" != "$REQ_HASH" ]; then
          echo "Dependencies changed or layer not found, installing...";
          rm -rf $LAYER_DIR/python/*;
          python3 -m pip install --no-cache-dir --upgrade-strategy only-if-needed -r lambdas/requirements.txt -t $LAYER_DIR/python;
          echo $REQ_HASH > $LAYER_DIR/.requirements_hash;
        else
          echo "Layer dependencies unchanged, skipping pip install";
        fi

  build:
    commands:
      - echo "Validating Terraform..."
      - cd terraform
      - terraform init -input=false
      - terraform fmt -recursive
      - terraform validate
      - cd ..
      - echo "Running Python tests..."
      - pytest test/ -v --disable-warnings --maxfail=1

artifacts:
  files:
    - build/*.zip
    - terraform/**
    - buildspec_deploy.yml
